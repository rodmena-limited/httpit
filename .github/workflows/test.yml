name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools

    - name: Build package
      run: python -m build

    - name: Install package
      run: pip install dist/*.whl

    - name: Test import
      run: |
        python -c "import fasthttp; print('Import successful')"
        python -c "from fasthttp import HTTPServer; print('HTTPServer available')"
        python -c "import fasthttp; print('Version:', fasthttp.__version__)"

    - name: Test CLI
      run: |
        fasthttp --help
        
    - name: Test basic server functionality
      run: |
        python -c "
from fasthttp import HTTPServer
import threading
import time
import urllib.request

# Start server in background
server = HTTPServer(port=8888)
thread = threading.Thread(target=server.serve_forever)
thread.daemon = True
thread.start()

# Give it time to start
time.sleep(2)

# Test connection
try:
    response = urllib.request.urlopen('http://127.0.0.1:8888/')
    print('Server responded with status:', response.getcode())
    server.stop()
    print('Test passed!')
except Exception as e:
    print('Test failed:', e)
    server.stop()
    exit(1)
        "